{"version":3,"file":"workbox-d33f5fe2.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/setCacheNameDetails.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/waitUntil.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","node_modules/workbox-core/_private/Deferred.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/_private/timeout.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/StrategyHandler.js","node_modules/workbox-strategies/Strategy.js","node_modules/workbox-precaching/PrecacheStrategy.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/PrecacheRoute.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js","node_modules/workbox-routing/NavigationRoute.js","node_modules/workbox-precaching/createHandlerBoundToURL.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.5.2'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            response = await handler.fetch(new Request(request, {\n                integrity: integrityInRequest || integrityInManifest,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            if (integrityInManifest && noIntegrityConflict) {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return (cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName);\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n"],"names":["self","_","e","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","classNameStr","expectedClassName","isReturnValueProblem","expectedMethod","entry","firstEntry","secondEntry","thrownErrorMessage","cacheNameId","method","name","methodName","expectedClass","normalizedRangeHeader","size","start","end","url","error","message","status","cacheName","origin","type","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","setCacheNameDetails","forEach","assert","clientsClaim","addEventListener","clients","claim","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","groupCollapsed","groupEnd","print","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","defaultMethod","validMethods","normalizeHandler","handler","handle","Route","match","setCatchHandler","catchHandler","RegExpRoute","regExp","RegExp","result","exec","href","location","index","toString","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","_defaultHandlerMap","routes","addFetchListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","sameOrigin","params","route","findMatchingRoute","debugMessages","push","has","get","msg","err","reject","_catchHandler","catch","catchErr","matchResult","undefined","setDefaultHandler","set","registerRoute","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","asyncFn","returnPromise","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","PrecacheInstallReportPlugin","updatedURLs","notUpdatedURLs","handlerWillStart","state","originalRequest","cachedResponseWillBeUsed","cachedResponse","PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","_precacheController","getCacheKeyForURL","headers","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","supportStatus","canConstructResponseFromBodyStream","testResponse","Response","body","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","Headers","statusText","modifiedResponseInit","blob","stripParams","fullURL","ignoreParams","strippedURL","param","delete","cacheMatchIgnoreParams","cache","matchOptions","strippedRequestURL","keysOptions","assign","ignoreSearch","cacheKeys","strippedCacheKeyURL","Deferred","promise","resolve","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","timeout","ms","setTimeout","toRequest","input","StrategyHandler","strategy","options","_cacheKeys","ExtendableEvent","_strategy","_handlerDeferred","_extendLifetimePromises","_plugins","plugins","_pluginStateMap","plugin","fetch","mode","FetchEvent","preloadResponse","possiblePreloadResponse","hasCallback","cb","iterateCallbacks","pluginFilteredRequest","fetchResponse","fetchOptions","runCallbacks","fetchAndCachePut","responseClone","cachePut","cacheMatch","effectiveRequest","getCacheKey","multiMatchOptions","caches","vary","responseToCache","_ensureResponseSafeToCache","open","hasCacheUpdateCallback","oldResponse","put","newResponse","statefulCallback","statefulParam","doneWaiting","shift","destroy","pluginsUsed","Strategy","responseDone","handleAll","_getResponse","handlerDone","_awaitComplete","_handle","waitUntilError","PrecacheStrategy","_fallbackToNetwork","fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handleInstall","_handleFetch","integrityInManifest","integrity","integrityInRequest","noIntegrityConflict","_useDefaultCacheabilityPluginIfNeeded","wasCached","defaultPluginIndex","cacheWillUpdatePluginCount","entries","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","redirected","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","install","bind","activate","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","cacheMode","warningMessage","installReportPlugin","credentials","currentlyCachedRequests","expectedCacheKeys","values","getURLsToCacheKeys","getCachedURLs","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","PrecacheRoute","urlsToCacheKeys","possibleURL","addRoute","precacheRoute","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search"],"mappings":"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"}